// URI 1340 EM C//
// https://www.beecrowd.com.br/judge/pt/problems/view/1340 //

#include <stdio.h>
#include <stdlib.h>
#include <queue>
#include <stack>

using namespace std;

int main() {
    int n;
    while (scanf("%d", &n) != EOF) {
        queue<int> q;
        priority_queue<int> pq;
        stack<int> s;

        bool isQueue = true;
        bool isPQ = true;
        bool isStack = true;

        for (int i = 0; i < n; i++) {
            int op, val;
            scanf("%d", &op);

            if (op == 1) {
                scanf("%d", &val);
                q.push(val);
                pq.push(val);
                s.push(val);
            } else {
                scanf("%d", &val);
                if (isQueue) {
                    if (q.empty() || q.front() != val) {
                        isQueue = false;
                    } else {
                        q.pop();
                    }
                }

                if (isPQ) {
                    if (pq.empty() || pq.top() != val) {
                        isPQ = false;
                    } else {
                        pq.pop();
                    }
                }

                if (isStack) {
                    if (s.empty() || s.top() != val) {
                        isStack = false;
                    } else {
                        s.pop();
                    }
                }
            }
        }

        if (!isQueue && !isPQ && !isStack) {
            printf("impossible\n");
        } else if ((isQueue && isPQ) || (isQueue && isStack) || (isPQ && isStack)) {
            printf("not sure\n");
        } else if (isQueue) {
            printf("queue\n");
        } else if (isPQ) {
            printf("priority queue\n");
        } else {
            printf("stack\n");
        }
    }
    return 0;
}

